/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ide.views;

import com.github.weisj.darklaf.extensions.rsyntaxarea.DarklafRSyntaxTheme;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import jnafilechooser.api.JnaFileChooser;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rsyntaxtextarea.Theme;
import org.fife.ui.rtextarea.RTextScrollPane;

public class HomeWindow extends javax.swing.JFrame {

    private RSyntaxTextArea textArea;
    
    private List<File> openedFiles;
    private File selectedFile;
    
    
    /**
     * Creates new form HomeWindow
     */
    public HomeWindow() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.openedFiles = new ArrayList<>();
        this.containerTabbar.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 8));
        
        initCodeEditor();
        
        initTabs();
        
        
        
    }
    
    private void initCodeEditor() {
        
        RSyntaxTextArea textArea = new RSyntaxTextArea();
        textArea.setFont(new Font(Font.SERIF, Font.PLAIN, 15));
        textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        
        Theme theme = new DarklafRSyntaxTheme();
        theme.apply(textArea);
        
        this.textArea = textArea;
        RTextScrollPane sp = new RTextScrollPane(textArea);
        sp.setBorder(null);
        // Add the code editor to the container panel
        this.containerCodeEditor.add(sp);
        
    }
    
    private void initTabs() {
        
        this.containerTabbar.removeAll();
        
        for (File openedFile : openedFiles) {
            PanelTab pt = new PanelTab(openedFile, this, this.selectedFile.equals(openedFile));
            
            if (this.selectedFile.equals(openedFile)) {
                try {
                    String code = new String(Files.readAllBytes(this.selectedFile.toPath()));
                    
                    this.textArea.setText(code);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Ocurrio un error al cargar el codigo del archivo");
                    System.out.println("No se pudo cargar el codigo del archivo : " + ex.getMessage());
                }
            }
            
            this.containerTabbar.add(pt);
        }
        
        this.containerTabbar.revalidate();
        this.containerTabbar.repaint();
    }
    
    public void closeFile(File file) {
        
        int result = JOptionPane.showConfirmDialog(null, "Deseas guardar los cambios antes de cerrar?", "Guardar cambios", JOptionPane.YES_NO_OPTION);
        
        if (result == JOptionPane.YES_OPTION) {
            // Save the file updates
        }
        
        this.openedFiles.remove(file);
        
        try {
            this.setSelectedFile(this.openedFiles.getLast());
        } catch (Exception e) {
            System.out.println("No existen mas arhivos por cargar");
            this.textArea.setText("");
            this.setSelectedFile(null);
        }
        
        this.initTabs();
        
    }
    
    public void setSelectedFile(File file) {
        this.selectedFile = file;
        this.initTabs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        containerWindow = new javax.swing.JPanel();
        containerTabbar = new javax.swing.JPanel();
        containerBody = new javax.swing.JPanel();
        containerSidebar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        containerCodeEditor = new javax.swing.JPanel();
        containerTerminal = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelOutput = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        itemOpenFile = new javax.swing.JMenuItem();
        itemOpenFolder = new javax.swing.JMenuItem();
        itemSave = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        containerWindow.setBackground(new java.awt.Color(255, 255, 255));
        containerWindow.setLayout(new javax.swing.BoxLayout(containerWindow, javax.swing.BoxLayout.Y_AXIS));

        containerTabbar.setBackground(new java.awt.Color(79, 78, 78));
        containerTabbar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        containerTabbar.setPreferredSize(new java.awt.Dimension(814, 50));

        javax.swing.GroupLayout containerTabbarLayout = new javax.swing.GroupLayout(containerTabbar);
        containerTabbar.setLayout(containerTabbarLayout);
        containerTabbarLayout.setHorizontalGroup(
            containerTabbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 812, Short.MAX_VALUE)
        );
        containerTabbarLayout.setVerticalGroup(
            containerTabbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        containerWindow.add(containerTabbar);

        containerBody.setBackground(new java.awt.Color(79, 78, 78));
        containerBody.setLayout(new javax.swing.BoxLayout(containerBody, javax.swing.BoxLayout.X_AXIS));

        containerSidebar.setBackground(new java.awt.Color(79, 78, 78));

        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("EXPLORER");

        javax.swing.GroupLayout containerSidebarLayout = new javax.swing.GroupLayout(containerSidebar);
        containerSidebar.setLayout(containerSidebarLayout);
        containerSidebarLayout.setHorizontalGroup(
            containerSidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerSidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );
        containerSidebarLayout.setVerticalGroup(
            containerSidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerSidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(403, Short.MAX_VALUE))
        );

        containerBody.add(containerSidebar);

        jSeparator2.setBackground(new java.awt.Color(102, 102, 102));
        jSeparator2.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        containerBody.add(jSeparator2);

        containerCodeEditor.setBackground(new java.awt.Color(242, 242, 242));
        containerCodeEditor.setMinimumSize(new java.awt.Dimension(600, 425));
        containerCodeEditor.setPreferredSize(new java.awt.Dimension(600, 425));
        containerCodeEditor.setLayout(new java.awt.CardLayout());
        containerBody.add(containerCodeEditor);

        containerWindow.add(containerBody);

        containerTerminal.setBackground(new java.awt.Color(79, 78, 78));
        containerTerminal.setMinimumSize(new java.awt.Dimension(0, 0));
        containerTerminal.setLayout(new java.awt.CardLayout(5, 5));

        jTabbedPane1.setBackground(new java.awt.Color(79, 78, 78));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        panelOutput.setBackground(new java.awt.Color(79, 78, 78));

        javax.swing.GroupLayout panelOutputLayout = new javax.swing.GroupLayout(panelOutput);
        panelOutput.setLayout(panelOutputLayout);
        panelOutputLayout.setHorizontalGroup(
            panelOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 802, Short.MAX_VALUE)
        );
        panelOutputLayout.setVerticalGroup(
            panelOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 82, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("OUTPUT", panelOutput);

        containerTerminal.add(jTabbedPane1, "card2");

        containerWindow.add(containerTerminal);

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 0));

        fileMenu.setBackground(new java.awt.Color(255, 255, 255));
        fileMenu.setForeground(new java.awt.Color(255, 255, 255));
        fileMenu.setText("File");

        itemOpenFile.setText("Open File");
        itemOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemOpenFileActionPerformed(evt);
            }
        });
        fileMenu.add(itemOpenFile);

        itemOpenFolder.setText("Open Folder");
        fileMenu.add(itemOpenFolder);

        itemSave.setText("Save");
        fileMenu.add(itemSave);

        jMenuBar1.add(fileMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerWindow, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemOpenFileActionPerformed
        // TODO add your handling code here:
        
        JnaFileChooser fc = new JnaFileChooser();
        fc.addFilter("All Files", "*");
        if (fc.showOpenDialog(this)) {
            File selectedFile = fc.getSelectedFile();
            this.openedFiles.add(selectedFile);
            this.selectedFile = selectedFile;
            // Refresh tabs
            this.initTabs();
        }
        
    }//GEN-LAST:event_itemOpenFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel containerBody;
    private javax.swing.JPanel containerCodeEditor;
    private javax.swing.JPanel containerSidebar;
    private javax.swing.JPanel containerTabbar;
    private javax.swing.JPanel containerTerminal;
    private javax.swing.JPanel containerWindow;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem itemOpenFile;
    private javax.swing.JMenuItem itemOpenFolder;
    private javax.swing.JMenuItem itemSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelOutput;
    // End of variables declaration//GEN-END:variables
}
